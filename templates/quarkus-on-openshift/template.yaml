apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: quarkus-on-openshift-template
  title: Create a Quarkus app for OpenShift
  description: Create a Quarkus app for OpenShift
  tags:
    - quarkus
    - java
    - maven
    # - tekton
    # - renovate
    # - sonarqube
    - openshift
    - argocd
spec:
  owner: group:superusers
  system: microservices
  type: service

  parameters:
    - title: Provide information about the new component
      required:
        - orgName
        - appName
        - domainName
        - repoBranchName
        - groupId
        - javaPackage
        - apiPath
        - namespace
        - description
        - registryUrl
        - clusterDomain
      properties:
        orgName:
          title: Organization name
          type: string
          default: rhdh-skillz
        appName:
          title: App name
          type: string
          default: quarkus-app-openshift
        domainName:
          title: Name of the domain object
          type: string
          default: Person
        repoBranchName:
          title: Name of the branch in the Git repository
          type: string
          default: main
        groupId:
          title: Maven Group ID
          type: string
          default: org.rhdhskillz.example
        javaPackage:
          title: Java package directory
          type: string
          default: org/rhdhskillz/example
        apiPath:
          title: REST API path
          type: string
          default: /api/v1
        namespace:
          title: The target namespace on Kubernetes
          type: string
          default: demo
        description:
          title: Description
          type: string
          default: Quarkus Generated by Backstage
        registryUrl:
          title: Registry URL
          type: string
          default: quay.io/jcanter
        clusterDomain:
          title: OpenShift Cluster Domain
          type: string
          default: apps-crc.testing
  steps:
    - id: sourceCodeTemplate
      name: Generating the Source Code Component
      action: fetch:template
      input:
        url: ./skeleton
        values:
          orgName: ${{ parameters.orgName }}
          appName: ${{ parameters.appName }}
          domainName: ${{ parameters.domainName }}
          groupId: ${{ parameters.groupId }}
          javaPackage: ${{ parameters.javaPackage }}
          apiPath: ${{ parameters.apiPath }}
          namespace: ${{ parameters.namespace }}

    - id: publish
      name: Publishing to the Source Code Repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.appName }}
        defaultBranch: ${{ parameters.repoBranchName }}
        protectDefaultBranch: false
        repoVisibility: public

    - id: register
      name: Registering the Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

    # - id: configCodeTemplate-1
    #   name: Generating the Config Code Component
    #   action: fetch:template
    #   input:
    #     url: ../../skeletons/argocd/manifests
    #     values:
    #       orgName: ${{ parameters.orgName }}
    #       appName: ${{ parameters.appName }}
    #       registryUrl: ${{ parameters.registryUrl }}
    #       namespace: ${{ parameters.namespace }}
    #       repoBranchName: ${{ parameters.repoBranchName }}
    #     targetPath: ./gitops/manifests

    - id: Generate kustomize deployment
      name: Generating the kustomize deployment
      action: fetch:template
      input:
        url: ../../skeletons/kustomize/deployment
        values:
          orgName: ${{ parameters.orgName }}
          appName: ${{ parameters.appName }}
          registryUrl: ${{ parameters.registryUrl }}
          namespace: ${{ parameters.namespace }}
          repoBranchName: ${{ parameters.repoBranchName }}
        targetPath: ./gitops/manifests

    - id: publish-config
      name: Publishing to the Config Code Repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.appName }}-config
        defaultBranch: ${{ parameters.repoBranchName }}
        sourcePath: ./gitops
        repoVisibility: public


    - id: create-argocd-resources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ parameters.appName }}-rhdh
        argoInstance: clusterargo
        namespace: ${{ parameters.namespace }}
        repoUrl: https://github.com/${{ parameters.orgName }}/${{ parameters.appName }}-config.git
        path: 'manifests/overlays/dev'
        projectName: default
  output:
    links:
      - title: Open the Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open the IaC Repository
        url: ${{ steps.publish-config.output.remoteUrl }}
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
